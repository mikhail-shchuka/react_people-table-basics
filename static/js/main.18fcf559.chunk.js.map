{"version":3,"sources":["App.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","index.tsx"],"names":["App","className","role","name","isActive","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","useState","people","setPeople","params","useParams","noPeople","setNoPeople","isError","setIsError","useEffect","peopleFromServer","length","newPeople","map","person","newPerson","mother","find","person1","motherName","father","fatherName","catch","classNames","slug","sex","born","died","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.18fcf559.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => {\n              let name = 'navbar-item';\n\n              name += isActive ? ' has-background-grey-lighter' : '';\n\n              return name;\n            }}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => {\n              let name = 'navbar-item';\n\n              name += isActive ? ' has-background-grey-lighter' : '';\n\n              return name;\n            }}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const params = useParams();\n  const [noPeople, setNoPeople] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      if (peopleFromServer.length === 0) {\n        setNoPeople(true);\n      }\n\n      const newPeople = peopleFromServer.map(person => {\n        const newPerson = { ...person };\n        const mother = peopleFromServer\n          .find(person1 => person.motherName === person1.name);\n        const father = peopleFromServer\n          .find(person1 => person.fatherName === person1.name);\n\n        if (mother) {\n          newPerson.mother = mother;\n        }\n\n        if (father) {\n          newPerson.father = father;\n        }\n\n        return newPerson;\n      });\n\n      setPeople(newPeople);\n    })\n      .catch(() => {\n        setIsError(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {people && !isError && !noPeople ? (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning': person.slug === params.slug,\n                    })}\n                  >\n                    <td>\n                      <NavLink\n                        to={`/people/${person.slug}`}\n                        className={classNames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                      >\n                        {person.name}\n                      </NavLink>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother ? (\n                        <NavLink\n                          to={`/people/${person.mother.slug}`}\n                          className={classNames({\n                            'has-text-danger': person.mother.sex === 'f',\n                          })}\n                        >\n                          {person.motherName}\n                        </NavLink>\n                      ) : (\n                        person.motherName || '-'\n                      )}\n                    </td>\n                    <td>\n                      {person.father ? (\n                        <NavLink\n                          to={`/people/${person.father.slug}`}\n                          className={classNames({\n                            'has-text-danger': person.sex === 'f',\n                          })}\n                        >\n                          {person.fatherName}\n                        </NavLink>\n                      ) : (\n                        person.fatherName || '-'\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <Loader />\n          )}\n          {noPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeopleTable } from './components/PeopleTable';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}